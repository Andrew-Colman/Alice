const HitObject = require('./HitObject');

/**
 * Represents an osu!standard hit object with difficulty calculation values.
 */
class StandardDiffHitObject {
    /**
     * @param {HitObject} obj The underlying hitobject.
     */
    constructor(obj) {
        /**
         * @type {HitObject}
         * @description The underlying hitobject.
         */
        this.obj = obj;
        this.reset();
    }

    /**
     * Resets the instance to its original state.
     */
    reset() {
        /**
         * @type {[number, number]}
         * @description The strain generated by the hitobject.
         */
        this.strains = [ 0.0, 0.0 ];

        /**
         * @type {[number, number]}
         * @description The normalized position of the hitobject.
         */
        this.normpos = [ 0.0, 0.0 ];

        /**
         * @type {number|null}
         * @description The angle created by the hitobject and the previous 2 hitobjects (if present).
         */
        this.angle = 0.0;

        /**
         * @type {boolean}
         * @description Whether or not the hitobject is considered as singletap.
         */
        this.is_single = false;

        /**
         * @type {number}
         * @description The time difference between the hitobject and the previous hitobject (if present).
         */
        this.delta_time = 0.0;
        
        /**
         * @type {number}
         * @description The draw distance between the hitobject and the previous hitobject (if present) in osupixels.
         */
        this.d_distance = 0.0;
    }

    /**
     * Returns a string representative of the class.
     *
     * @returns {string} The string representation of the class.
     */
    toString() {
        return `Strains: [${this.strains[0].toFixed(2)}, ${this.strains[1].toFixed(2)}], normpos: [${this.normpos[0].toFixed(2)}, ${this.normpos[1].toFixed(2)}], is_single: ${this.is_single}`;
    }
}

module.exports = StandardDiffHitObject;